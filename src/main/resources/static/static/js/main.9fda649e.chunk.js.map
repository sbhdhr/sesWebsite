{"version":3,"sources":["components/login/Login.js","components/topbar/topbar.jsx","services/AlertDataService.js","components/table/AlertTable.jsx","components/homepage/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","username","password","error","handleChange","bind","onSubmit","document","body","style","backgroundImage","e","preventDefault","this","setState","console","log","store","set","history","push","name","value","className","Grid","Helmet","Column","width","Form","styles","loginForm","Header","as","Message","content","Input","inline","label","onChange","type","Button","React","Component","TopBar","class","backgroundColor","color","padding","textAlign","borderRadius","ALERT_API_URL","axios","get","id","a","delete","createBrowserHistory","AlertTable","alerts","count","refreshAlerts","deleteAlertClicked","AlertDataService","getMaxIncId","then","response","data","interval","setInterval","retrieveAllAlerts","length","obj","i","toast","createdAt","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","deleteAlert","success","remove","window","location","reload","clearInterval","marginTop","onClick","handleLogout","map","alert","key","desc","HomePage","newestOnTop","rtl","pauseOnVisibilityChange","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"0dA8FeA,E,kDArFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,OAAO,GAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAVC,E,gEAcjBE,SAASC,KAAKC,MAAMC,gBAAkB,0F,+BAG/BC,GACPA,EAAEC,iBADQ,MAGqBC,KAAKb,MAA5BC,EAHE,EAGFA,SAAUC,EAHR,EAGQA,SAIlB,GAFAW,KAAKC,SAAS,CAAEX,OAAO,IAEJ,UAAbF,GAAqC,gBAAbC,EAC5B,OAAOW,KAAKC,SAAS,CAAEX,OAAO,IAGhCY,QAAQC,IAAI,0BACZC,IAAMC,IAAI,YAAY,GACtBL,KAAKd,MAAMoB,QAAQC,KAAK,W,mCAGbT,E,GAAqB,IAAhBU,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACtBT,KAAKC,SAAL,eAAiBO,EAAOC,M,+BAGhB,IACAnB,EAAUU,KAAKb,MAAfG,MAER,OACE,yBAAKoB,UAAU,SACb,6BACF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+CAGF,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,IACpB,kBAACH,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACC,EAAA,EAAD,CACEL,UAAWM,IAAOC,UAClB3B,MAAOA,EACPG,SAAUO,KAAKP,UAEf,kBAACyB,EAAA,EAAD,CAAQC,GAAG,MAAX,SACC7B,GACC,kBAAC8B,EAAA,EAAD,CACE9B,MAAOA,EACP+B,QAAQ,6BAGZ,kBAACN,EAAA,EAAKO,MAAN,CACEC,QAAM,EACNC,MAAM,WACNhB,KAAK,WACLiB,SAAUzB,KAAKT,eAEjB,kBAACwB,EAAA,EAAKO,MAAN,CACEC,QAAM,EACNC,MAAM,WACNE,KAAK,WACLlB,KAAK,WACLiB,SAAUzB,KAAKT,eAEjB,kBAACwB,EAAA,EAAKY,OAAN,CAAaD,KAAK,UAAlB,gB,GA5EQE,IAAMC,WCOXC,E,uKAXP,OACI,yBAAKC,MAAM,aACX,yBAAKA,MAAM,cAAcnC,MAAO,CAACoC,gBAAgB,UAAUC,MAAM,UAAUC,QAAQ,OACnFC,UAAU,SAASC,aAAa,SAC9B,sD,GANOP,a,iBCEfQ,EAAa,UAFH,+CAEG,UAoBJ,M,4GAfP,OAAOC,IAAMC,IAAN,UAAaF,EAAb,W,oCAIP,OAAOC,IAAMC,IAAN,UAAaF,EAAb,W,kCAGCG,GAER,IAAIC,EAAIH,IAAMI,OAAN,UAAgBL,EAAhB,YAAiCG,IAEzC,OADAtC,QAAQC,IAAIsC,GACLA,M,+BCbTnC,EAAUqC,cAiJDC,E,kDA9Ib,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX0D,OAAQ,GACRC,MAAO,GAET,EAAKC,cAAgB,EAAKA,cAAcvD,KAAnB,gBACrB,EAAKwD,mBAAqB,EAAKA,mBAAmBxD,KAAxB,gBAPT,E,gEAUE,IAAD,OAClByD,EAAiBC,cAAcC,MAAK,SAACC,GACnClD,QAAQC,IAAIiD,EAASC,MACrB,EAAKpD,SAAS,CAAE6C,MAAOM,EAASC,UAElCrD,KAAK+C,gBACL/C,KAAKsD,SAAWC,YAAYvD,KAAK+C,cAAe,O,sCAGjC,IAAD,OAMd,GALAE,EAAiBO,oBAAoBL,MAAK,SAACC,GAEzC,EAAKnD,SAAS,CAAE4C,OAAQO,EAASC,UAG/BrD,KAAKb,MAAM0D,OAAOY,OAAS,EAAG,CAChC,IAAIC,EAAM1D,KAAKb,MAAM0D,OAAO7C,KAAKb,MAAM0D,OAAOY,OAAS,GAIvD,GAFAvD,QAAQC,IAAIuD,EAAIlB,IAEZxC,KAAKb,MAAM2D,MAAQY,EAAIlB,GAAI,CAC7B,IAAK,IAAImB,EAAI,EAAGA,EAAI3D,KAAKb,MAAM0D,OAAOY,OAAQE,IACxC3D,KAAKb,MAAM0D,OAAOc,GAAGnB,GAAKxC,KAAKb,MAAM2D,OACvCc,IAAMtE,MACJ,uBACKU,KAAKb,MAAM0D,OAAOc,GAAGnB,IACxB,MAFF,UAGKxC,KAAKb,MAAM0D,OAAOc,GAAGE,WAC1B,CACEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAKnBnE,KAAKC,SAAS,CAAE6C,MAAOY,EAAIlB,S,yCAKdA,GAAK,IAAD,OAErBS,EAAiBmB,YAAY5B,GAAIW,MAAK,SAACC,GACrCQ,IAAMS,QAAQ,8CAA0B7B,GAAM,CAC5CsB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAGb,EAAKpB,qB,qCAKP3C,IAAMkE,OAAO,YACbhE,EAAQC,KAAK,KACbgE,OAAOC,SAASC,QAAO,K,6CAIvBC,cAAc1E,KAAKsD,Y,+BAGX,IAAD,OACP,OACE,6BACE,yBAAKvB,MAAM,YAAYnC,MAAO,CAAE+E,UAAW,SACzC,yBAAK5C,MAAM,OACT,yBAAKA,MAAM,UACT,2CAEF,yBAAKA,MAAM,WACX,yBAAKA,MAAM,UACT,4BACErB,UAAU,8BACVkE,QAAS,kBAAM,EAAKC,iBAFtB,aAUN,yBAAKnE,UAAU,YAAYd,MAAO,CAAE+E,UAAW,SAC7C,2BAAOjE,UAAU,SACf,+BACE,4BACE,wBAAId,MAAO,CAAEoC,gBAAiB,UAAWC,MAAO,YAAhD,MAGA,wBAAIrC,MAAO,CAAEoC,gBAAiB,UAAWC,MAAO,YAAhD,eAGA,wBAAIrC,MAAO,CAAEoC,gBAAiB,UAAWC,MAAO,YAAhD,aAGA,wBACErC,MAAO,CAAEoC,gBAAiB,UAAWC,MAAO,eAIlD,+BACGjC,KAAKb,MAAM0D,OAAOiC,KAAI,SAACC,GAAD,OACrB,wBAAIC,IAAKD,EAAMvC,IACb,4BAAKuC,EAAMvC,IACX,4BAAKuC,EAAME,MACX,4BAAKF,EAAMlB,WACX,4BACE,4BACEnD,UAAU,iBACVkE,QAAS,kBAAM,EAAK5B,mBAAmB+B,EAAMvC,MAF/C,uB,GA9HKX,aC8BVqD,G,iMA5BsB,IAAxB9E,IAAMmC,IAAI,aACXvC,KAAKd,MAAMoB,QAAQC,KAAK,KAE5Bb,SAASC,KAAKC,MAAMC,gBAAkB,S,+BAK1C,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CACEiE,SAAS,YACTC,UAAW,IACXC,iBAAe,EACfmB,aAAW,EACXlB,cAAY,EACZmB,KAAK,EACLC,yBAAuB,EACvBlB,WAAS,EACTD,cAAY,S,GAxBCrC,cCaRyD,MAdf,WACE,OACE,yBAAK5E,UAAU,OACZ,yBAAKA,UAAU,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,IAAIC,UAAWxG,IACjC,kBAAC,IAAD,CAAOuG,KAAK,QAAQC,UAAWP,QCDnBQ,QACW,cAA7BnB,OAAOC,SAASmB,UAEe,UAA7BpB,OAAOC,SAASmB,UAEhBpB,OAAOC,SAASmB,SAASC,MACvB,2D,aCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAIFrG,SAASsG,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAAAiD,GACJA,EAAaC,gBAEdC,OAAM,SAAAhH,GACLY,QAAQZ,MAAMA,EAAMiH,c","file":"static/js/main.9fda649e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, Form, Header, Message } from \"semantic-ui-react\";\nimport { Helmet } from \"react-helmet\";\nimport store from \"store\";\nimport 'semantic-ui-css/semantic.min.css';\nimport styles from \"./styles.css\";\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundImage = 'url(\"https://usersnap.com/blog/wp-content/uploads/2017/04/web-design-background.png\")';\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    this.setState({ error: false });\n\n    if (!(username === \"admin\" && password === \"pythonsucks\")) {\n      return this.setState({ error: true });\n    }\n\n    console.log(\"you're logged in. yay!\");\n    store.set(\"loggedIn\", true);\n    this.props.history.push(\"/home\");\n  }\n\n  handleChange(e, { name, value }) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <div className=\"bgImg\">\n        <div>\n      <Grid>\n        <Helmet>\n          <title>SES | Login</title>\n        </Helmet>\n\n        <Grid.Column width={6} />\n        <Grid.Column width={4}>\n          <Form\n            className={styles.loginForm}\n            error={error}\n            onSubmit={this.onSubmit}\n          >\n            <Header as=\"h1\">Login</Header>\n            {error && (\n              <Message\n                error={error}\n                content=\"Incorrect Credentials !!\"\n              />\n            )}\n            <Form.Input\n              inline\n              label=\"Username\"\n              name=\"username\"\n              onChange={this.handleChange}\n            />\n            <Form.Input\n              inline\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            <Form.Button type=\"submit\">Go!</Form.Button>\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n            <div class=\"page-header\" style={{backgroundColor:\"#076161\",color:\"#ffffff\",padding:\"10px\",\r\n            textAlign:\"center\",borderRadius:\"25px\"}}>\r\n              <h1>SES Project Demo</h1>      \r\n            </div>    \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopBar","import axios from 'axios'\r\n\r\nconst API_URL = 'https://ses-project-bitsme.herokuapp.com/api'\r\n//const API_URL = 'http://localhost:8080/api'\r\nconst ALERT_API_URL = `${API_URL}/alert`\r\n\r\nclass AlertDataService {\r\n\r\n    retrieveAllAlerts() {\r\n        return axios.get(`${ALERT_API_URL}/all`);\r\n    }\r\n\r\n    getMaxIncId(){\r\n        return axios.get(`${ALERT_API_URL}/max`);\r\n    }\r\n\r\n    deleteAlert(id) {\r\n        //console.log(`${ALERT_API_URL}/${id}`);\r\n        var a = axios.delete(`${ALERT_API_URL}/${id}`);\r\n        console.log(a);\r\n        return a;\r\n    }\r\n}\r\n\r\nexport default new AlertDataService()\r\n","import React, { Component } from \"react\";\r\nimport AlertDataService from \"../../services/AlertDataService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"../table/AlertTable.css\";\r\nimport store from \"store\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass AlertTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alerts: [],\r\n      count: 0,\r\n    };\r\n    this.refreshAlerts = this.refreshAlerts.bind(this);\r\n    this.deleteAlertClicked = this.deleteAlertClicked.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AlertDataService.getMaxIncId().then((response) => {\r\n      console.log(response.data);\r\n      this.setState({ count: response.data });\r\n    });\r\n    this.refreshAlerts();\r\n    this.interval = setInterval(this.refreshAlerts, 2000);\r\n  }\r\n\r\n  refreshAlerts() {\r\n    AlertDataService.retrieveAllAlerts().then((response) => {\r\n      //console.log(response);\r\n      this.setState({ alerts: response.data });\r\n    });\r\n\r\n    if (this.state.alerts.length > 0) {\r\n      var obj = this.state.alerts[this.state.alerts.length - 1];\r\n\r\n      console.log(obj.id);\r\n      // detect new requests\r\n      if (this.state.count < obj.id) {\r\n        for (var i = 0; i < this.state.alerts.length; i++) {\r\n          if (this.state.alerts[i].id > this.state.count) {\r\n            toast.error(\r\n              \"New alert \" +\r\n                `${this.state.alerts[i].id}` +\r\n                \" @ \" +\r\n                `${this.state.alerts[i].createdAt}`,\r\n              {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n              }\r\n            );\r\n          }\r\n        }\r\n        this.setState({ count: obj.id });\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteAlertClicked(id) {\r\n    //alert(\"delete\"+id);\r\n    AlertDataService.deleteAlert(id).then((response) => {\r\n      toast.success(\"🗑️ Deleted alert \" + `${id}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n      //this.setState({ message: `Delete of alert ${id} Successful` })\r\n      this.refreshAlerts();\r\n    });\r\n  }\r\n\r\n  handleLogout() {\r\n    store.remove(\"loggedIn\");\r\n    history.push(\"/\");\r\n    window.location.reload(false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"container\" style={{ marginTop: \"20px\" }}>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <h4>All Alerts</h4>\r\n            </div>\r\n            <div class=\"col-sm\"></div>\r\n            <div class=\"col-sm\">\r\n              <button\r\n                className=\"btn btn-warning float-right\"\r\n                onClick={() => this.handleLogout()}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\" style={{ marginTop: \"20px\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ backgroundColor: \"#092445\", color: \"#ffffff\" }}>\r\n                  ID\r\n                </th>\r\n                <th style={{ backgroundColor: \"#092445\", color: \"#ffffff\" }}>\r\n                  Description\r\n                </th>\r\n                <th style={{ backgroundColor: \"#092445\", color: \"#ffffff\" }}>\r\n                  Timestamp\r\n                </th>\r\n                <th\r\n                  style={{ backgroundColor: \"#092445\", color: \"#ffffff\" }}\r\n                ></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.alerts.map((alert) => (\r\n                <tr key={alert.id}>\r\n                  <td>{alert.id}</td>\r\n                  <td>{alert.desc}</td>\r\n                  <td>{alert.createdAt}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.deleteAlertClicked(alert.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertTable;\r\n","import React, { Component } from \"react\";\r\nimport TopBar from \"../topbar/topbar\";\r\nimport AlertTable from \"../table/AlertTable\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport store from 'store';\r\nimport styles from \"./styles.css\";\r\n\r\nclass HomePage extends Component {\r\n\r\n    componentDidMount() {\r\n        if(!(store.get(\"loggedIn\")===true)){\r\n            this.props.history.push(\"/\");\r\n        }\r\n        document.body.style.backgroundImage = \"none\";\r\n        // alert(document.body.style.backgroundImage);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopBar />\r\n        <AlertTable />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnVisibilityChange\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from 'react-router-dom';\nimport Login from \"./components/login/Login\";\nimport HomePage from \"./components/homepage/HomePage\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <div className=\"app-routes\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/home\" component={HomePage} />\n      </Switch>\n  </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}