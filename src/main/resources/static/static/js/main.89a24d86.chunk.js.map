{"version":3,"sources":["components/login/images/img-01.png","components/topbar/img-01.png","components/login/Login.js","components/topbar/topbar.jsx","services/AlertDataService.js","components/table/AlertTable.jsx","components/homepage/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","state","username","password","error","handleChange","bind","onSubmit","e","preventDefault","this","setState","console","log","store","set","history","push","target","name","value","class","Helmet","src","data-tilt","require","alt","type","placeholder","onChange","aria-hidden","React","Component","TopBar","className","ALERT_API_URL","axios","get","id","a","delete","createBrowserHistory","AlertTable","alerts","count","refreshAlerts","deleteAlertClicked","AlertDataService","getMaxIncId","then","response","data","interval","setInterval","retrieveAllAlerts","length","obj","i","toast","createdAt","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","deleteAlert","success","remove","window","location","reload","clearInterval","onClick","handleLogout","map","alert","key","desc","HomePage","document","body","style","backgroundImage","newestOnTop","rtl","pauseOnVisibilityChange","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.89a24d86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-01.0fac72da.png\";","module.exports = __webpack_public_path__ + \"static/media/img-01.c1ae64ef.png\";","import React from \"react\";\nimport store from \"store\";\nimport { Helmet } from \"react-helmet\";\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./css/util.css\";\nimport \"./css/main.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    //e.preventDefault();\n    //console.log(\"in onsubmit()\");\n\n    const { username, password } = this.state;\n    //console.log(username);\n    //console.log(password);\n\n    this.setState({ error: false });\n\n    if (!(username === \"admin\" && password === \"pythonsucks\")) {\n      this.setState({ error: true });\n    } else {\n      console.log(\"you're logged in. yay!\");\n      store.set(\"loggedIn\", true);\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  handleChange(e) {\n    //console.log(e.target.value)\n    //console.log(e.target.name);\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { error } = this.state;\n    //console.log(this.state.error);\n    return (\n      <div class=\"limiter\">\n        <Helmet>\n          <script src=\"./vendor/jquery/jquery-3.2.1.min.js\"></script>\n          <script src=\"./vendor/bootstrap/js/popper.js\"></script>\n          <script src=\"./vendor/bootstrap/js/bootstrap.min.js\"></script>\n          <script src=\"./vendor/select2/select2.min.js\"></script>\n          <script src=\"./vendor/tilt/tilt.jquery.min.js\"></script>\n\n          <script src=\"js/main.js\"></script>\n        </Helmet>\n\n        <div class=\"container-login100\">\n          <div class=\"wrap-login100\">\n            <div class=\"login100-pic js-tilt\" data-tilt>\n              <img src={require(\"./images/img-01.png\")} alt=\"IMG\" />\n            </div>\n\n            <form class=\"login100-form \" onSubmit={this.onSubmit}>\n              <span class=\"login100-form-title\">Administrator Login</span>\n              \n                          \n              <div class=\"wrap-input100 \">\n                <input\n                  class=\"input100\"\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"User ID\"\n                  onChange={this.handleChange}\n                />\n                <span class=\"focus-input100\"></span>\n                <span class=\"symbol-input100\">\n                  <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n              <div class=\"wrap-input100 \">\n                <input\n                  class=\"input100\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                />\n                <span class=\"focus-input100\"></span>\n                <span class=\"symbol-input100\">\n                  <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n              <div class=\"container-login100-form-btn\">\n                <input\n                  class=\"login100-form-btn\"\n                  type=\"submit\"\n                  value=\"Login\"\n                ></input>\n                {error?(<h6>Invalid Credentials !!</h6>):null}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      /*\n      //       className={styles.loginForm}\n      //       error={error}\n      //       onSubmit={this.onSubmit}\n      //     >\n      //       <Header as=\"h1\">Login</Header>\n      //       {error && (\n      //         <Message\n      //           error={error}\n      //           content=\"Incorrect Credentials !!\"\n      //         />\n      //       )}\n      //       <Form.Input\n      //         inline\n      //         label=\"Username\"\n      //         name=\"username\"\n      //         onChange={this.handleChange}\n      //       />\n      //       <Form.Input\n      //         inline\n      //         label=\"Password\"\n      //         type=\"password\"\n      //         name=\"password\"\n      //         onChange={this.handleChange}\n      //       />\n      //       <Form.Button type=\"submit\">Go!</Form.Button>\n      //     </Form>\n      //   </Grid.Column>\n      // </Grid>\n      // </div>\n      // </div>*/\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\r\nimport \"./topbar.css\";\r\n\r\nclass TopBar extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"container top\">\r\n        <div className=\"pageheader\">\r\n          <img src={require(\"./img-01.png\")} alt=\"logo\"></img>\r\n          <span class=\"heading\">Administrative Portal</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import axios from 'axios'\r\n\r\nconst API_URL = 'https://ses-project-bitsme.herokuapp.com/api'\r\n//const API_URL = 'http://localhost:8080/api'\r\nconst ALERT_API_URL = `${API_URL}/alert`\r\n\r\nclass AlertDataService {\r\n\r\n    retrieveAllAlerts() {\r\n        return axios.get(`${ALERT_API_URL}/all`);\r\n    }\r\n\r\n    getMaxIncId(){\r\n        return axios.get(`${ALERT_API_URL}/max`);\r\n    }\r\n\r\n    deleteAlert(id) {\r\n        //console.log(`${ALERT_API_URL}/${id}`);\r\n        var a = axios.delete(`${ALERT_API_URL}/${id}`);\r\n        console.log(a);\r\n        return a;\r\n    }\r\n}\r\n\r\nexport default new AlertDataService()\r\n","import React, { Component } from \"react\";\r\nimport AlertDataService from \"../../services/AlertDataService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./AlertTable.css\";\r\nimport store from \"store\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass AlertTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alerts: [],\r\n      count: 0,\r\n    };\r\n    this.refreshAlerts = this.refreshAlerts.bind(this);\r\n    this.deleteAlertClicked = this.deleteAlertClicked.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AlertDataService.getMaxIncId().then((response) => {\r\n      console.log(response.data);\r\n      this.setState({ count: response.data });\r\n    });\r\n    this.refreshAlerts();\r\n    this.interval = setInterval(this.refreshAlerts, 2000);\r\n  }\r\n\r\n  refreshAlerts() {\r\n    AlertDataService.retrieveAllAlerts().then((response) => {\r\n      //console.log(response);\r\n      this.setState({ alerts: response.data });\r\n    });\r\n\r\n    if (this.state.alerts.length > 0) {\r\n      var obj = this.state.alerts[this.state.alerts.length - 1];\r\n\r\n      console.log(obj.id);\r\n      // detect new requests\r\n      if (this.state.count < obj.id) {\r\n        for (var i = 0; i < this.state.alerts.length; i++) {\r\n          if (this.state.alerts[i].id > this.state.count) {\r\n            toast.error(\r\n              \"New alert \" +\r\n                `${this.state.alerts[i].id}` +\r\n                \" @ \" +\r\n                `${this.state.alerts[i].createdAt}`,\r\n              {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n              }\r\n            );\r\n          }\r\n        }\r\n        this.setState({ count: obj.id });\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteAlertClicked(id) {\r\n    //alert(\"delete\"+id);\r\n    AlertDataService.deleteAlert(id).then((response) => {\r\n      const msg = `🗑️ Deleted alert `;\r\n      toast.success( msg+ `${id}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n      //this.setState({ message: `Delete of alert ${id} Successful` })\r\n      this.refreshAlerts();\r\n    });\r\n  }\r\n\r\n  handleLogout() {\r\n    store.remove(\"loggedIn\");\r\n    history.push(\"/\");\r\n    window.location.reload(false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"container top-panel\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <h4 >All Alerts</h4>\r\n            </div>\r\n            <div class=\"col-sm\"></div>\r\n            <div class=\"col-sm\">\r\n              <button\r\n                className=\"btn btn-warning float-right\"\r\n                onClick={() => this.handleLogout()}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  ID\r\n                </th>\r\n                <th>\r\n                  Description\r\n                </th>\r\n                <th>\r\n                  Timestamp\r\n                </th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.alerts.map((alert) => (\r\n                <tr key={alert.id}>\r\n                  <td>{alert.id}</td>\r\n                  <td>{alert.desc}</td>\r\n                  <td>{alert.createdAt}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.deleteAlertClicked(alert.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertTable;\r\n","import React, { Component } from \"react\";\r\nimport TopBar from \"../topbar/topbar\";\r\nimport AlertTable from \"../table/AlertTable\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport store from 'store';\r\n\r\nclass HomePage extends Component {\r\n\r\n    componentDidMount() {\r\n        if(!(store.get(\"loggedIn\")===true)){\r\n            this.props.history.push(\"/\");\r\n        }\r\n        document.body.style.backgroundImage = \"none\";\r\n        // alert(document.body.style.backgroundImage);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopBar />\r\n        <AlertTable />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnVisibilityChange\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from 'react-router-dom';\nimport Login from \"./components/login/Login\";\nimport HomePage from \"./components/homepage/HomePage\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <div className=\"app-routes\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/home\" component={HomePage} />\n      </Switch>\n  </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}